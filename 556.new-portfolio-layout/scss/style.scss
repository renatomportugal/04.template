html, body {
  font-size: 20px;
}

body {  
  width: 100%;
  min-height: 100vh;
  perspective: 100vw;
}

.page {  
  transition: all 0.5s;
  display: grid;
  position: fixed;
  top: 0.5rem;
  left: 0.5rem;
  width: calc(100vw - 1rem);
  height: calc(100vh - 1rem);
  
  grid-template-rows: repeat(9, 1fr);
  grid-template-columns: repeat(10, 1fr);
  
  grid-gap: 0.5rem;
  transform-style: preserve-3d;
  
  
  grid-template-areas: 
    "c1  c1  e3  c2  c2  c4  c4  c4  c5  c5"
    "c1  c1  c3  c3  c3  c4  c4  c4  c5  c5"
    "c1  c1  c3  c3  c3  c6  c6  c7  c7  c7"
    "e1  e1  c3  c3  c3  c6  c6  c7  c7  c7"
    "c8  c8  c8  c9  c9  c9  e4  c7  c7  c7"
    "c8  c8  c8  c9  c9  c9  nav nav nav nav"
    "c8  c8  c8  c9  c9  c9  nav nav nav nav"
    "e2  c10 c10 c10 c11 c11 nav nav nav nav"
    "e2  c10 c10 c10 c11 c11 c12 c12 c12 e5";
  
  nav {
    grid-area: nav;
    background: yellow;
    display: flex;
    align-items: center;
    justify-content: center;
    transform-style: preserve-3d;
    transform: translate3d(0, 0, 0);
    transition: all 0.6s;
    transition-delay: 0.3s;
  }
  
  &.__transitional {
    transform: rotate3d(0, 1, 0, 30deg);
    nav {
      transform: rotate3d(0, 1, 0, -60deg) scale(0.5) translate3d(30rem, 0, 20rem);
    }
  }
}

.panel {
  
  transition: 0.3s;
  transition-delay: 0.6s;
  
  position: relative;
  transform-style: preserve-3d;  
  
  &.__empty {
    background: red;
  }
  
  &--front, &--back {
    transition: all 0.3s;  
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  &--front {
    background: black;
    color: white;    
  }
  
  &--back {
    transform: rotate3d(0, 1, 0, 180deg);    
    background: blue;
  }
  
  &:not(.__empty):hover .panel--back {
    transform: rotate3d(0, 1, 0, 360deg);    
  }  
  
  &:not(.__empty):hover .panel--front {
    transform: rotate3d(0, 1, 0, 180deg);    
  }  
  
}

@for $cell from 1 through 12 {
  .panel--#{$cell} {
    grid-area: c#{$cell};
    
    .__transitional & {
      transform: translate3d(0, 0, #{($cell - 3) * 3}rem);
      .panel--front {
        $hash: round(255 * $cell / 24);
        background: rgb($hash, $hash, $hash);
      }      
    }
  }
}

@for $cell from 1 through 5 {
  .empty--#{$cell} {
    grid-area: e#{$cell};    
    transform: translate3d(0, 0, 0);
    .__transitional & {
      transform: translate3d(0, 0, -10rem);
    }
  }
}